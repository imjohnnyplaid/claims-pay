I want to make sure our process and the purpose of each portal is fully understood.

So, let’s make sure we’re both on the same page. Traditionally, when a provider submit doctor’s notes to be coded with their EHR, the coded claims is sent for reimbursement by the payer (insurance). More often than not, these claims are denied due to minor errors. It’s not uncommon for provider claims to be denied multiple times before they are finally accepted and paid. Denials and denial management alone costs the healthcare industry billion of dollars each year. Our solution is instant payment for healthcare claims. The benefit to the provider is zero denials and zero A/R days. They’ll get paid for their services the same day they submit their doctor’s notes for coding to us. Essentially, we’re taking all the risk. They submit their notes the same way they do now (via the EHR) but once submitted, we take over, coding the claim, checking it for risk and then purchasing it. We then send the claim we purchased to the payer for a full reimbursement, but because our autocoder has such high accuracy, our likelihood of payment is much higher than that of the providers. In other words, we’re so confident in our ability to code a claim properly and get reimbursed promptly by the payer that we’ll buy all provider claims that are within our risk threshold. However, we do not directly have the funds to purchase the millions of claims submitted to insurance by providers. Therefore, we need a funding source to cover the large volume of claim submissions. That’s where banks come in. By partnering with banks, we’re able to purchase all claims regardless of claim volume or amount. With that said, proper reporting, data management, data segmentation and security is crucial. The process is as follows: The Provider submits notes to be coded, we code them, rate coded claims for risk, accepted claims are sent to our payment engine while rejected claims are send back to the provider with an error code (217) - this tells the provider what to fix before resubmitting the claim for payment, our payment engine reads the coded claims that the risk engine has accepted and pulls the claim amount. The claim amount is then requested from the funding source and a direct ACH transfer is made from the funding source to the Provider on our behalf. The payment/transfer details are recorded and passed back to us so we know our purchased claims have been paid. Purchased and paid claims are then sent by us to the payer for reimbursement. The reimbursement/payment from the payer must then be reconciled by us (automated process) and the 835 (payment) is matched with the 837 (claim) to make sure the amount we were paid is for the full amount listed in the coded claim. Our portals must track the entire end-to-end process step-by-step. Each of the 3 portals will provide a method of tracking each step of the process that pertains to that portal and its users. By keeping proper records, we dramatically reduce the risk of fraud.

Now let’s get into the purpose of each portal. 

First, is the customer portal which allows our customers to track and monitor our processes in real-time. They can see the status of coded claims, payments from us, total revenue, rejected claims, claims data, historical portfolio, etc.

Second, we have the portal for our funding source(s). The bank portal allows financial institutions to monitor their spending on claims purchases. Within the portal, banks should be able to see which providers claims we’re paying with their money, total claim volume, and the status of purchased claims after being sent to the payer for reimbursement. The bank portal will also keep a record of all 835s received by the payer and reconciliation (matching 835s to 837s, and the results of reconciliation - paid the correct amount, paid too much, paid not enough).

Third, we have our internal portal. This is where we’ll be able to monitor the entire process. From coding to final reimbursement and adjudication. Our portal needs to be robust to handle multiple different tasks and reports. Our internal portal needs to show the following:

1. List all customers. Currently, this is listed as “Active Customers” on the dashboard. However, we need more info. Clicking on Active Customers should take us to a detail page that lists each customer and their details. (Provider name, NPI, Funding Source if we use more than one bank, total purchases made, total claims paid, total claims reimbursed, total claims outstanding, total profit, and total loss if any). Additionally, individual customer records must show the details for the all the users of that provider. The customer portal must have proper data segmentation so that only users belonging to a given provider will see their own provider data and no-one else’s.  Therefore, after the initial onboarding is complete, which creates the customer account and assigns an account admin, all invitations and authorization of additional users are done through the portal of the logged in user. Users that accepted invitations to create their account and gain access to the portal and automatically assigned to the provider from which the invitation was sent.
2. We also need to see our funding sources. This should be a separate page, added to the main navigation titled (Funding Sources). On that page is a list of all our funding sources (participating bank partners). The list should include the bank name, number of providers they are currently proving funds for, and the total amount paid out to all the providers they fund.
3. There should also be a customer support page (add to the nav as Support) which lists all inquiries from our customers and service status (we’ll go more in to depth on everything this page needs to do another time).

A note about customer portal data segmentation

The success of the customer portal depends on our ability to show our customers the data most beneficial and helpful to them. It also means keeping their data secure. Therefore, having proper data segmentation is crucial. 

For example, let’s say we have 3 customers: Customer A, B and C, and each customer has 3 authorized users. We will have 3 total customers and 9 total users. Therefore, the structure and data segmentation will be as follows: Users A1, A2, and A3 will only see data belonging to Customer A. Users B1, B2, and B3 will only see customer B’s data and so forth. All customers will see the same portal UI, but the data populating the UI will be unique to the provider to which they belong.